
#version 460 

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;	// 64 threads

// input Dicom Volume



layout(std430, binding = 6) buffer histBuffer{ uint hist[]; };
layout(rg16, binding = 0) uniform image3D volume;
//layout(rg16, binding = 5) uniform image3D volume;
//layout(rgba16, binding = 1) uniform image3D volume;

layout(binding = 7) uniform atomic_uint[1] maxBinVal;

uniform uint NUM_BINS;	// number of gray values in the new Volume
uniform ivec3 VolumeDims;	// size of the section of the volume we are applying CLAHE to 

void main() {

	// figure out the sub block this index belongs to 
	ivec3 index = ivec3(gl_GlobalInvocationID.xyz);
 	// if we are not within the volume of interest -> return 
	if ( index.x >= VolumeDims.x || index.y >= VolumeDims.y || index.z >= VolumeDims.z ) {
		return;
	}
	
	// get the gray value of the Volume
	float volSamplef = imageLoad(volume, index).r;
	uint volSample = uint(volSamplef*(NUM_BINS-1u));
	
	
	// Increment the histogram
	if(volSample == 0 )
		return;
	atomicAdd(hist[volSample], 1 );

 	atomicCounterMax(maxBinVal[0], hist[volSample]);
	
}
